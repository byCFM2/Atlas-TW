#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ AtlasMaps.lua –æ—Ç zoneId, locationId –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ entries

–£–¥–∞–ª—è–µ—Ç:
- zoneId –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
- locationId –ø–∞—Ä–∞–º–µ—Ç—Ä—ã  
- –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–∏–ø–∞ EntityTypes.NPC –∏–∑ entries
- –í—Å–µ —á–∏—Å–ª–æ–≤—ã–µ ID –∏–∑ entries
"""

import re
import os
import sys
from pathlib import Path

def clean_atlas_maps(file_path):
    """
    –û—á–∏—â–∞–µ—Ç —Ñ–∞–π–ª AtlasMaps.lua –æ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    
    Args:
        file_path (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É AtlasMaps.lua
    """
    if not os.path.exists(file_path):
        print(f"–û—à–∏–±–∫–∞: –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª: {file_path}")
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    original_lines = len(content.splitlines())
    
    # 1. –£–¥–∞–ª—è–µ–º zoneId –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞: zoneId = —á–∏—Å–ª–æ,
    content = re.sub(r'\s*zoneId\s*=\s*\d+\s*,?\s*\n', '', content)
    
    # 2. –£–¥–∞–ª—è–µ–º locationId –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞: locationId = —á–∏—Å–ª–æ, locationId = -—á–∏—Å–ª–æ, locationId = { —á–∏—Å–ª–æ, —á–∏—Å–ª–æ },
    content = re.sub(r'\s*locationId\s*=\s*-?\d+\s*,?\s*\n', '', content)
    content = re.sub(r'\s*locationId\s*=\s*\{[^}]*\}\s*,?\s*\n', '', content)
    

    
    # 5. –û—á–∏—â–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –ª–∏—à–Ω–∏–µ –∑–∞–ø—è—Ç—ã–µ
    # –£–¥–∞–ª—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    content = re.sub(r'\n\s*\n\s*\n', '\n\n', content)
    
    # –£–¥–∞–ª—è–µ–º –∑–∞–ø—è—Ç—ã–µ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º–∏ —Å–∫–æ–±–∫–∞–º–∏
    content = re.sub(r',\s*\n\s*}', '\n        }', content)
    content = re.sub(r',\s*\n\s*\)', '\n        )', content)
    
    new_lines = len(content.splitlines())
    removed_lines = original_lines - new_lines
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = file_path + '.backup'
    with open(backup_path, 'w', encoding='utf-8') as f:
        with open(file_path, 'r', encoding='utf-8') as original:
            f.write(original.read())
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   - –ò—Å—Ö–æ–¥–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {original_lines}")
    print(f"   - –ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {new_lines}")
    print(f"   - –£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {removed_lines}")
    print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {backup_path}")
    
    return True

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    """
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É AtlasMaps.lua
    if len(sys.argv) > 1:
        atlas_maps_path = sys.argv[1]
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—â–µ–º –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        atlas_maps_path = "AtlasMaps.lua"
        if not os.path.exists(atlas_maps_path):
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏
            atlas_maps_path = "c:\\Users\\Vitali\\Documents\\Trae\\WOW\\Atlas-TW\\AtlasMaps.lua"
    
    print("üßπ –°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ AtlasMaps.lua")
    print("=" * 50)
    print("–£–¥–∞–ª—è–µ—Ç:")
    print("- zoneId –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
    print("- locationId –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
    print("- –í—Å–µ entries —Å EntityTypes.NPC")
    print("- –í—Å–µ entries —Å —á–∏—Å–ª–æ–≤—ã–º–∏ ID")
    print("=" * 50)
    
    if clean_atlas_maps(atlas_maps_path):
        print("\nüéâ –û—á–∏—Å—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    else:
        print("\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ")
        sys.exit(1)

if __name__ == "__main__":
    main()